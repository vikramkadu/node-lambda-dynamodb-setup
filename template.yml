AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  KindrPlatformIAMRole: 
    Type: String
    Description: Lambda Role
  Stage:
    Type: String
    Default: dev
    Description: The deployment stage

Globals:
  Function:
    Runtime: nodejs20.x
    MemorySize: 256
    Timeout: 30
    Environment:
      Variables:
        DYNAMODB_TABLE_USERS: !Sub "${Stage}-Users"
        DYNAMODB_TABLE_ORGANIZATIONS: !Sub "${Stage}-organizations"
        DYNAMODB_TABLE_ORGANIZATIONS_SETTINGS: !Sub "${Stage}-OrganizationSetting"

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage

  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${Stage}-Users"
      AttributeDefinitions:
        - AttributeName: org_id
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: org_id
          KeyType: HASH
        - AttributeName: email
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      BillingMode: PROVISIONED
      Tags:
        - Key: Name
          Value: !Sub "${Stage}-Users"

  OrganizationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${Stage}-organizations"
      AttributeDefinitions:
        - AttributeName: org_id
          AttributeType: S
        - AttributeName: org_name
          AttributeType: S
      KeySchema:
        - AttributeName: org_id
          KeyType: HASH
        - AttributeName: org_name
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      BillingMode: PROVISIONED
      Tags:
        - Key: Name
          Value: !Sub "${Stage}-organizations"

  OrganizationSettingsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${Stage}-OrganizationSetting"
      AttributeDefinitions:
        - AttributeName: org_id
          AttributeType: S
        - AttributeName: settings
          AttributeType: B
      KeySchema:
        - AttributeName: org_id
          KeyType: HASH
        - AttributeName: settings
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      BillingMode: PROVISIONED
      Tags:
        - Key: Name
          Value: !Sub "${Stage}-OrganizationSetting"

  healthCheck:
    Type: AWS::Serverless::Function
    Properties:
      Handler: services/index.healthCheck
      Runtime: nodejs20.x
      MemorySize: 128
      Timeout: 10
      Role: !Ref KindrPlatformIAMRole
      Events:
        healthCheck:
          Type: Api
          Properties:
            Path: /api/v1/healthCheck
            Method: GET
            RestApiId: !Ref Api

  RegisterUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: services/user/index.registerUserHandler
      Runtime: nodejs20.x
      MemorySize: 128
      Timeout: 30
      Role: !Ref KindrPlatformIAMRole
      Events:
        RegisterUserFunction:
          Type: Api
          Properties:
            Path: /api/v1/user/register
            Method: POST
            RestApiId: !Ref Api
  
  CognitoSignUpHandler:
    Type: AWS::Serverless::Function
    Properties:
      Handler: services/user/index.cognitoSignUpHandler
      Runtime: nodejs20.x
      MemorySize: 128
      Timeout: 30
      Role: !Ref KindrPlatformIAMRole
      Events:
        CognitoSignUpHandler:
          Type: Api
          Properties:
            Path: /api/v1/user/cognitoSignUp
            Method: POST
            RestApiId: !Ref Api
   
  ConfirmUserHandler:
    Type: AWS::Serverless::Function
    Properties:
      Handler: services/user/index.confirmUserHandler
      Runtime: nodejs20.x
      MemorySize: 128
      Timeout: 30
      Role: !Ref KindrPlatformIAMRole
      Events:
        ConfirmUserHandler:
          Type: Api
          Properties:
            Path: /api/v1/user/confirmUser
            Method: POST
            RestApiId: !Ref Api

  getOnboardSettings:
    Type: AWS::Serverless::Function
    Properties:
      Handler: services/user/index.getOnboardSettings
      Runtime: nodejs20.x
      MemorySize: 256
      Timeout: 30
      Role: !Ref KindrPlatformIAMRole
      Events:
        GetOnboardSettings:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /api/v1/user/getOnboardSettings/{role_type}
            Method: GET

  OnboardCreateFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: services/user/index.onboardCreateHandler
      Runtime: nodejs20.x
      MemorySize: 128
      Timeout: 30
      Role: !Ref KindrPlatformIAMRole
      Events:
        OnboardCreateFunction:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /api/v1/user/onboardCreate
            Method: POST

  GetOrganizationSettingsByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: services/settings/index.getAllOrganisationSetting
      Runtime: nodejs20.x
      MemorySize: 128
      Timeout: 30
      Role: !Ref KindrPlatformIAMRole
      Events:
        GetOrganizationSettingsByIdFunction:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /api/v1/getOrganizationSettingsById/{org_id}
            Method: GET

Outputs:
  UsersTableName:
    Value: !Ref UsersTable
    Export:
      Name: UsersTableName
  OrganizationsTableName:
    Value: !Ref OrganizationsTable
    Export:
      Name: OrganizationsTableName
  OrganizationsSettingsTableName:
    Value: !Ref OrganizationSettingsTable
    Export:
      Name: OrganizationsSettingsTableName
